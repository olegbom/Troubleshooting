<Window x:Class="Troubleshooting.Views.DiagramEditorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Troubleshooting.Views"
        xmlns:vm="clr-namespace:Troubleshooting.ViewModels"
        mc:Ignorable="d"
        Title="DiagramEditorView" Height="300" Width="300">
    <Window.DataContext>
        <vm:DiagramEditorViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <ItemsControl ItemsSource="{Binding DiagramItems}" x:Name="DiagramCanvas" Grid.Row="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type vm:NodeViewModel}">
                    <local:NodeView DataContext="{Binding}" 
                                    BorderMoveMouseDown="Node_OnBorderMoveMouseDown"
                                    RectSizeMouseDown="NodeView_OnRectSizeMouseDown"
                                    ConnectorOutMouseDown="NodeView_OnConnectorOutMouseDown"
                                    ConnectorInMouseUp="NodeView_OnConnectorInMouseUp"
                                    MouseEnter="NodeView_OnMouseEnter"
                                    MouseLeave="NodeView_OnMouseLeave"
                                    MouseLeftButtonDown="NodeView_OnMouseLeftButtonDown"
                                    MouseLeftButtonUp="NodeView_OnMouseLeftButtonUp"
                                    MouseRightButtonDown="NodeView_OnMouseRightButtonDown"
                                    MouseRightButtonUp="NodeView_OnMouseRightButtonUp"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:ConnectionViewModel}">
                    <local:ConnectionView DataContext="{Binding}"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:SelectRectangleViewModel}">
                    <Path Visibility="{Binding Visible, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Stroke="DodgerBlue" 
                          StrokeThickness="1" SnapsToDevicePixels="True">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure IsClosed="True" IsFilled="False" StartPoint="0,0">
                                    <LineSegment Point="{Binding Point1}"/>
                                    <LineSegment Point="{Binding Point2}"/>
                                    <LineSegment Point="{Binding Point3}"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                </DataTemplate>
            </ItemsControl.Resources>
            
        </ItemsControl>

        
        
        <Menu Grid.Row="0" >
            <MenuItem Header="Добавить новый блок" Click="MenuItemNewBlock_OnClick" ></MenuItem>
            <MenuItem Header="Завершить" Click="MenuItemEnd_OnClick"></MenuItem>
        </Menu>


    </Grid>
</Window>
